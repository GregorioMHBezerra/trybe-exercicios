// Parte II
// Abaixo, vocÃª verÃ¡ algumas especificaÃ§Ãµes de algoritmos para desenvolver. Ã‰ fundamental que vocÃª utilize o que aprendeu sobre let, const, arrow functions, template literals e ternary operator.

// Crie uma funÃ§Ã£o que ligue e desligue um motor de um carro.
  // Crie uma variÃ¡vel para armazenar o valor de status do seu motor (lembre-se de armazenar o tipo de variÃ¡vel da forma correta);
    // Crie a funÃ§Ã£o ligarDesligar utilizando arrow functions. Ela nÃ£o receberÃ¡ nenhum parÃ¢metro;

  // Crie a lÃ³gica para ligar e desligar o motor (a lÃ³gica deverÃ¡ utilizar uma condicional para ligar e desligar o motor);

  // Imprima no terminal â€œO motor estÃ¡ ligadoâ€œ e â€œO motor estÃ¡ desligadoâ€œ (lembre-se de utilizar o template literals nesse momento).

  // BÃ´nus (opcional): tente fazer o mesmo exercÃ­cio utilizando ternary operator.

let carroLigado = true;
let ligaDesliga = () => {
  carroLigado = (carroLigado == true) ? carroLigado = false : carroLigado = true
  let temporario = (carroLigado == true) ? statusCarro = 'ligado' : statusCarro = 'desligado'
  return `O motor estÃ¡ ${statusCarro}`
}
console.log(ligaDesliga());




//   ðŸš€ Crie uma funÃ§Ã£o que calcule a Ã¡rea de um cÃ­rculo.

// Na matemÃ¡tica, a fÃ³rmula para calcular a Ã¡rea de um cÃ­rculo Ã©: Ã¡rea = PI vezes o raio elevado ao quadrado.
// Com base nessa informaÃ§Ã£o:
    // Crie a funÃ§Ã£o circleArea, que recebe o valor do raio como parÃ¢metro, utilizando arrow functions;
// Crie uma variÃ¡vel para armazenar o valor de PI (lembre-se de armazenar o tipo de variÃ¡vel da forma correta);
// Crie a lÃ³gica para retornar a Ã¡rea do cÃ­rculo;

// Imprima no terminal â€œEssa Ã© a Ã¡rea do cÃ­rculo: resultado da funÃ§Ã£oâ€œ (lembre-se de utilizar o template literals nesse momento).
// Exemplo de retorno:
// ParÃ¢metro: 3
// Retorno: Essa Ã© a Ã¡rea do cÃ­rculo: 28.259999999999998
// ParÃ¢metro: 5
// Retorno: Essa Ã© a Ã¡rea do cÃ­rculo: 78.5

const circleArea = raio => {
  const pi = 3.14
  const area = pi * raio**2
  return `Essa Ã© a Ã¡rea do cÃ­rculo: ${area}`
}
console.log(circleArea(3));






// ðŸš€ Crie uma funÃ§Ã£o que receba uma frase como parÃ¢metro e retorne a maior palavra da frase.

// longestWord('AntÃ´nio foi no banheiro e nÃ£o sabemos o que aconteceu') // retorna 'aconteceu'

// De olho na dica ðŸ‘€: Nesse exercÃ­cio, serÃ¡ necessÃ¡rio utilizar os conhecimentos sobre array, mÃ©todo split e loop for/of.

// BÃ´nus (opcional): Tente fazer o mesmo exercÃ­cio utilizando o mÃ©todo array.sort().


const maiorPalavra = (frase) => {
  const array = [frase][0].split(' ');
  let maiorPalavraProvisoria = array[0]
  for (const chave in array) {
    if (array[chave].length > maiorPalavraProvisoria.length) {
      maiorPalavraProvisoria = array[chave]
    }
      
  }
  return maiorPalavraProvisoria
}
console.log(maiorPalavra('ola pessoal querido com palavras enormementegrandeseerradas'));

